{"version":3,"sources":["webpack:///./src/components/Item.jsx","webpack:///./src/components/Gallery.jsx","webpack:///./src/components/Container.jsx","webpack:///./src/pages/index.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js"],"names":["StyledItem","styled","div","props","width","gap","Item","image","to","slug","fluid","className","title","defaultProps","StyledGallery","partitions","Gallery","images","columns","Array","fill","map","forEach","idx","push","column","key","src","StyledConainer","Container","children","pageQuery","IndexPage","edges","data","allMarkdownRemark","Layout","SEO","Title","style","textAlign","node","frontmatter","featured","full","name","$export","P"],"mappings":"0QAMMA,EAAaC,IAAOC,IAAV,uEAAGD,CAAH,8WACL,SAACE,GAAD,OAAWA,EAAMC,SAET,SAACD,GAAD,OAAWA,EAAME,OAyB9BC,EAAO,SAAC,GAAD,IAAGF,EAAH,EAAGA,MAAOG,EAAV,EAAUA,MAAOF,EAAjB,EAAiBA,IAAjB,OACX,kBAACL,EAAD,CAAYI,MAAOA,EAAOC,IAAKA,GAC7B,kBAAC,OAAD,CAAMG,GAAE,IAAMD,EAAME,MAClB,kBAAC,IAAD,CAAKC,MAAOH,IACZ,yBAAKI,UAAW,SAAUJ,EAAMK,UAWtCN,EAAKO,aAAe,CAClBT,MAAO,IACPC,IAAK,GAGQC,QChDTQ,EAAgBb,IAAOC,IAAV,4EAAGD,CAAH,uKAEe,SAACE,GAAD,OAAWA,EAAMY,cACrC,SAACZ,GAAD,OAAWA,EAAME,OAUzBW,EAAU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQF,EAAsB,EAAtBA,WAAYV,EAAU,EAAVA,IAC/Ba,EAAUC,MAAMJ,GACnBK,KAAK,MACLC,KAAI,iBAAM,MAKb,OAJAJ,EAAOK,SAAQ,SAACf,EAAOgB,GACrBL,EAAQK,EAAMR,GAAYS,KAAKjB,MAI/B,kBAACO,EAAD,CAAeC,WAAYA,EAAYV,IAAKA,GACzCa,EAAQG,KAAI,SAACI,EAAQF,GAAT,OACX,yBAAKG,IAAKH,GACPE,EAAOJ,KAAI,SAACd,GAAD,OACV,kBAAC,EAAD,CAAMmB,IAAKnB,EAAMoB,IAAKtB,IAAKA,EAAKE,MAAOA,aAcnDS,EAAQH,aAAe,CACrBE,WAAY,EACZV,IAAK,GAGQW,QChDTY,EAAiB3B,IAAOC,IAAV,+EAAGD,CAAH,gEAQL4B,EAFG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,kBAACF,EAAD,KAAiBE,I,YCuCxCC,GAFEC,UAnCG,SAAC,GAAD,IAEOC,EAFP,EAChBC,KACEC,kBAAqBF,MAFP,OAKhB,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKzB,MAAM,SAEX,kBAAC,EAAD,KACE,kBAAC0B,EAAA,EAAD,8BACA,uBAAGC,MAAO,CAAEC,UAAW,YAAvB,8pBAcF,kBAAC,EAAD,CACEtB,QAAS,EACTD,OAAQgB,EAAMZ,KAAI,gBAAGoB,EAAH,EAAGA,KAAH,wBACbA,EAAKC,YAAYC,SAASC,KAAKlC,MADlB,CAEhBE,MAAO6B,EAAKC,YAAYG,KACxBpC,KAAMgC,EAAKC,YAAYjC,cAQT,e,qBC/CtB,IAAIqC,EAAU,EAAQ,QAEtBA,EAAQA,EAAQC,EAAG,QAAS,CAAE3B,KAAM,EAAQ,UAE5C,EAAQ,OAAR,CAAiC","file":"component---src-pages-index-js-746d251e254e9cf928f9.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Img from 'gatsby-image';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby-plugin-intl';\n\nconst StyledItem = styled.div`\n  width: ${(props) => props.width}%;\n  display: inline-block;\n  margin-bottom: ${(props) => props.gap}rem;\n  position: relative;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\n  .title {\n    transition: all 0.5s;\n    opacity: 0;\n    display: grid;\n    align-items: center;\n    justify-items: center;\n    background-color: rgba(66, 33, 99, 0.7);\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    top: 0;\n    z-index: 400;\n    color: white;\n    text-transform: lowercase;\n  }\n\n  &:hover .title {\n    opacity: 1;\n  }\n`;\n\nconst Item = ({ width, image, gap }) => (\n  <StyledItem width={width} gap={gap}>\n    <Link to={`/${image.slug}`}>\n      <Img fluid={image} />\n      <div className={'title'}>{image.title}</div>\n    </Link>\n  </StyledItem>\n);\n\nItem.propTypes = {\n  image: PropTypes.object,\n  width: PropTypes.number,\n  gap: PropTypes.number,\n};\n\nItem.defaultProps = {\n  width: 100,\n  gap: 1,\n};\n\nexport default Item;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Item from './Item';\nimport styled from 'styled-components';\n\nconst StyledGallery = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${(props) => props.partitions}, 1fr);\n  grid-gap: ${(props) => props.gap}rem;\n  margin: 0 70px;\n  @media only screen and (max-width: 980px) {\n    & {\n      grid-template-columns: 1fr;\n      margin: 0;\n    }\n  }\n`;\n\nconst Gallery = ({ images, partitions, gap }) => {\n  const columns = Array(partitions)\n    .fill(null)\n    .map(() => []);\n  images.forEach((image, idx) => {\n    columns[idx % partitions].push(image);\n  });\n\n  return (\n    <StyledGallery partitions={partitions} gap={gap}>\n      {columns.map((column, idx) => (\n        <div key={idx}>\n          {column.map((image) => (\n            <Item key={image.src} gap={gap} image={image} />\n          ))}\n        </div>\n      ))}\n    </StyledGallery>\n  );\n};\n\nGallery.propTypes = {\n  images: PropTypes.array,\n  partitions: PropTypes.number,\n  gap: PropTypes.number,\n};\n\nGallery.defaultProps = {\n  partitions: 3,\n  gap: 1,\n};\n\nexport default Gallery;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledConainer = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 0 1.0875rem 1.45rem;\n`;\n\nconst Container = ({ children }) => <StyledConainer>{children}</StyledConainer>;\n\nexport default Container;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { Link } from 'gatsby-plugin-intl';\nimport Img from 'gatsby-image';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Gallery from '../components/Gallery';\nimport Container from '../components/Container';\nimport Title from '../components/Title';\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => (\n  <Layout>\n    <SEO title=\"Home\" />\n\n    <Container>\n      <Title>Creatividad Confinada</Title>\n      <p style={{ textAlign: 'justify' }}>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean dictum\n        ullamcorper augue, vestibulum aliquam erat tincidunt non. Quisque tempor\n        viverra nulla in sagittis. Quisque lectus magna, hendrerit euismod diam\n        sit amet, accumsan vehicula arcu. Nunc imperdiet maximus nulla, eu\n        posuere nibh. Duis ante ligula, pretium at nunc ac, ultrices rutrum\n        eros. Class aptent taciti sociosqu ad litora torquent per conubia\n        nostra, per inceptos himenaeos. Aliquam tempor, enim nec tristique\n        luctus, ante nunc laoreet ipsum, ac accumsan tortor quam a leo.\n        Phasellus felis velit, bibendum ac sapien nec, posuere fermentum lectus.\n        Aliquam nec libero eu ligula sodales mattis.\n      </p>\n    </Container>\n\n    <Gallery\n      columns={3}\n      images={edges.map(({ node }) => ({\n        ...node.frontmatter.featured.full.fluid,\n        title: node.frontmatter.name,\n        slug: node.frontmatter.slug,\n      }))}\n    />\n  </Layout>\n);\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query($language: String) {\n    allMarkdownRemark(\n      filter: {\n        fileInfo: { sourceInstanceName: { eq: \"artists\" } }\n        frontmatter: { lang: { eq: $language } }\n      }\n      sort: { fields: frontmatter___name, order: ASC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            slug\n            lang\n            name\n            featured {\n              full: childImageSharp {\n                fluid(quality: 95) {\n                  aspectRatio\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n"],"sourceRoot":""}