{"version":3,"sources":["webpack:///./src/components/Artwork.jsx","webpack:///./src/components/Portrait.jsx","webpack:///./src/templates/artist.js"],"names":["StyledArtwork","styled","div","Artwork","title","image","fluid","className","StyledPortrait","Portrait","fixed","alt","name","StyledArtistPage","article","pageQuery","ArtistPage","data","markdownRemark","frontmatter","html","Layout","hasBack","SEO","portrait","Title","dangerouslySetInnerHTML","__html","artwork","map","x","idx","key","full"],"mappings":"4PAKMA,EAAgBC,IAAOC,IAAV,4EAAGD,CAAH,oIAuBJE,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OACd,kBAACL,EAAD,KACE,kBAAC,IAAD,CAAKM,MAAOD,IACZ,yBAAKE,UAAW,SAAUH,K,YCdxBI,EAAiBP,IAAOC,IAAV,+EAAGD,CAAH,wGAkBLQ,EAVE,SAAC,GAAD,IAAGJ,EAAH,EAAGA,MAAH,OACf,kBAACG,EAAD,KACE,kBAAC,IAAD,CAAKE,MAAOL,EAAOM,IAAKN,EAAMO,SCH5BC,EAAmBZ,IAAOa,QAAV,+EAAGb,CAAH,2IAoETc,GAFEC,UAlDI,SAAC,GAAD,QACjBC,KACEC,eAAkBC,EAFH,EAEGA,YAAaC,EAFhB,EAEgBA,KAFhB,OAKjB,kBAACC,EAAA,EAAD,CAAQC,SAAS,GACf,kBAACC,EAAA,EAAD,CAAKnB,MAAOe,EAAYP,OACxB,kBAACC,EAAD,KACGM,EAAYd,OACX,kBAAC,EAAD,CACEA,MAAK,iBACAc,EAAYd,MAAMmB,SAASd,MAD3B,CAEHE,KAAMO,EAAYP,SAIxB,kBAACa,EAAA,EAAD,KAAQN,EAAYP,MAEpB,yBAAKc,wBAAyB,CAAEC,OAAQP,KAEvCD,EAAYS,SACXT,EAAYS,QAAQC,KAAI,SAACC,EAAGC,GAAJ,OACtB,kBAAC,EAAD,CAASC,IAAKD,EAAK3B,MAAO0B,EAAE1B,MAAOC,MAAOyB,EAAEzB,MAAM4B,KAAK3B,cA8B3C","file":"component---src-templates-artist-js-b4734db86ad1b6df2356.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Img from 'gatsby-image';\n\nconst StyledArtwork = styled.div`\n  .gatsby-image-wrapper {\n    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\n    margin-bottom: 1rem;\n  }\n  .title {\n    text-align: center;\n    margin-bottom: 2rem;\n  }\n`;\n\nconst Artwork = ({ title, image }) => (\n  <StyledArtwork>\n    <Img fluid={image} />\n    <div className={'title'}>{title}</div>\n  </StyledArtwork>\n);\n\nArtwork.propTypes = {\n  title: PropTypes.string,\n  image: PropTypes.object,\n};\n\nexport default Artwork;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Img from 'gatsby-image';\nimport styled from 'styled-components';\n\nconst StyledPortrait = styled.div`\n  text-align: center;\n  .gatsby-image-wrapper {\n    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\n    border-radius: 50%;\n  }\n`;\n\nconst Portrait = ({ image }) => (\n  <StyledPortrait>\n    <Img fixed={image} alt={image.name} />\n  </StyledPortrait>\n);\n\nPortrait.propTypes = {\n  image: PropTypes.object,\n};\n\nexport default Portrait;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport Img from 'gatsby-image';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Artwork from '../components/Artwork';\nimport Title from '../components/Title';\nimport Portrait from '../components/Portrait';\n\nconst StyledArtistPage = styled.article`\n  text-align: justify;\n  max-width: 900px;\n  margin: 0 auto;\n  h2 {\n    text-align: center;\n  }\n  h4.gallery,\n  h4.share {\n    margin-top: 3rem;\n  }\n  .meta {\n    text-align: center;\n  }\n`;\n\nconst ArtistPage = ({\n  data: {\n    markdownRemark: { frontmatter, html },\n  },\n}) => (\n  <Layout hasBack={true}>\n    <SEO title={frontmatter.name} />\n    <StyledArtistPage>\n      {frontmatter.image && (\n        <Portrait\n          image={{\n            ...frontmatter.image.portrait.fixed,\n            name: frontmatter.name,\n          }}\n        />\n      )}\n      <Title>{frontmatter.name}</Title>\n\n      <div dangerouslySetInnerHTML={{ __html: html }} />\n\n      {frontmatter.artwork &&\n        frontmatter.artwork.map((x, idx) => (\n          <Artwork key={idx} title={x.title} image={x.image.full.fluid} />\n        ))}\n    </StyledArtistPage>\n  </Layout>\n);\n\nArtistPage.propTypes = {\n  intl: PropTypes.shape({\n    formatMessage: PropTypes.func,\n  }),\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.shape({\n        slug: PropTypes.slug,\n        name: PropTypes.string,\n        image: PropTypes.object,\n        artwork: PropTypes.arrayOf(\n          PropTypes.shape({\n            title: PropTypes.string,\n            image: PropTypes.object,\n          })\n        ),\n      }),\n      html: PropTypes.string,\n    }),\n  }),\n};\n\nexport default ArtistPage;\n\nexport const pageQuery = graphql`\n  query($slug: String, $language: String) {\n    markdownRemark(\n      frontmatter: { slug: { eq: $slug }, lang: { eq: $language } }\n      fileInfo: { sourceInstanceName: { eq: \"artists\" } }\n    ) {\n      frontmatter {\n        slug\n        name\n        image {\n          portrait: childImageSharp {\n            fixed(quality: 95, width: 199, height: 199, fit: INSIDE) {\n              ...GatsbyImageSharpFixed_withWebp\n            }\n          }\n        }\n        artwork {\n          title\n          image {\n            thumbnail: childImageSharp {\n              fixed(quality: 95, width: 250, height: 250, fit: INSIDE) {\n                ...GatsbyImageSharpFixed_withWebp\n              }\n            }\n            full: childImageSharp {\n              fluid(quality: 95) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n        }\n      }\n      html\n    }\n  }\n`;\n"],"sourceRoot":""}