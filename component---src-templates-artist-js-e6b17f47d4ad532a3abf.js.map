{"version":3,"sources":["webpack:///./src/components/Artwork.jsx","webpack:///./src/components/Title.jsx","webpack:///./src/components/Portrait.jsx","webpack:///./src/templates/artist.js"],"names":["StyledArtwork","styled","div","Artwork","item","onClick","fluid","image","className","title","StyledTitle","Title","children","StyledPortrait","Portrait","fixed","alt","name","pageQuery","article","ArtistPage","data","markdownRemark","frontmatter","html","pageContext","SEO","lang","language","Composition","Sidebar","portrait","style","textAlign","dangerouslySetInnerHTML","__html","Social","website","facebook","instagram","artwork","Gallery","partitions","component","items","map","x","full","video"],"mappings":"gPAKMA,EAAgBC,IAAOC,IAAV,6EAAGD,CAAH,mJAwBJE,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAAT,OACd,kBAACL,EAAD,CAAeK,QAAS,kBAAMA,MAC5B,kBAAC,IAAD,CAAKC,MAAOF,EAAKG,QACjB,yBAAKC,UAAW,SAAUJ,EAAKK,SChB7BC,EAAcT,IAAOC,IAAV,qEAAGD,CAAH,yEAmBFU,EAVD,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACZ,kBAACF,EAAD,KACE,4BAAKE,KCVHC,EAAiBZ,IAAOC,IAAV,+EAAGD,CAAH,sFAiBLa,EAVE,SAAC,GAAD,IAAGP,EAAH,EAAGA,MAAH,OACf,kBAACM,EAAD,KACE,kBAAC,IAAD,CAAKE,MAAOR,EAAOS,IAAKT,EAAMU,S,gDC2FrBC,GA3FYjB,IAAOkB,QAAV,8EAAGlB,CAAH,2IAyFPmB,UAzEI,SAAC,GAAD,QACjBC,KACEC,eAAkBC,EAFH,EAEGA,YAAaC,EAFhB,EAEgBA,KAEjCC,EAJiB,EAIjBA,YAJiB,OAMjB,oCACE,kBAACC,EAAA,EAAD,CAAKjB,MAAOc,EAAYN,KAAMU,KAAMF,EAAYG,WAEhD,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACGP,EAAYhB,OACX,kBAAC,EAAD,CACEA,MAAK,iBACAgB,EAAYhB,MAAMwB,SAAShB,MAD3B,CAEHE,KAAMM,EAAYN,SAIxB,kBAAC,EAAD,KAAQM,EAAYN,MACpB,yBAAKe,MAAO,CAAEC,UAAW,YACvB,yBAAKC,wBAAyB,CAAEC,OAAQX,MAG1C,kBAACY,EAAA,EAAD,CACEC,QAASd,EAAYc,QACrBC,SAAUf,EAAYe,SACtBC,UAAWhB,EAAYgB,aAI1BhB,EAAYiB,SACX,kBAACC,EAAA,EAAD,CACEC,WAAY,EACZC,UAAWxC,EACXwB,KAAMF,EAAYG,SAClBgB,MAAOrB,EAAYiB,QAAQK,KAAI,SAACC,GAAD,MAAQ,CACrCvC,MAAOuC,EAAEvC,MAAMwC,KAAKzC,MACpBG,MAAOqC,EAAErC,MACTuC,MAAOF,EAAEE,eAoCC","file":"component---src-templates-artist-js-e6b17f47d4ad532a3abf.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Img from 'gatsby-image';\n\nconst StyledArtwork = styled.div`\n  cursor: pointer;\n  .gatsby-image-wrapper {\n    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\n    margin-bottom: 1rem;\n  }\n  .title {\n    text-align: center;\n    margin-bottom: 2rem;\n  }\n`;\n\nconst Artwork = ({ item, onClick }) => (\n  <StyledArtwork onClick={() => onClick()}>\n    <Img fluid={item.image} />\n    <div className={'title'}>{item.title}</div>\n  </StyledArtwork>\n);\n\nArtwork.propTypes = {\n  title: PropTypes.string,\n  image: PropTypes.object,\n};\n\nexport default Artwork;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledTitle = styled.div`\n  margin-bottom: 2rem;\n  h2 {\n    font-size: 2rem;\n    line-height: 2rem;\n    color: black;\n  }\n`;\n\nconst Title = ({ children }) => (\n  <StyledTitle>\n    <h2>{children}</h2>\n  </StyledTitle>\n);\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Img from 'gatsby-image';\nimport styled from 'styled-components';\n\nconst StyledPortrait = styled.div`\n  .gatsby-image-wrapper {\n    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\n    border-radius: 50%;\n  }\n`;\n\nconst Portrait = ({ image }) => (\n  <StyledPortrait>\n    <Img fixed={image} alt={image.name} />\n  </StyledPortrait>\n);\n\nPortrait.propTypes = {\n  image: PropTypes.object,\n};\n\nexport default Portrait;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\n\nimport SEO from '../components/SEO';\nimport Artwork from '../components/Artwork';\nimport Title from '../components/Title';\nimport Portrait from '../components/Portrait';\nimport Composition from '../components/Composition';\nimport Sidebar from '../components/Sidebar';\nimport Gallery from '../components/Gallery';\nimport Social from '../components/Social';\n\nconst StyledArtistPage = styled.article`\n  text-align: justify;\n  max-width: 900px;\n  margin: 0 auto;\n  h2 {\n    text-align: center;\n  }\n  h4.gallery,\n  h4.share {\n    margin-top: 3rem;\n  }\n  .meta {\n    text-align: center;\n  }\n`;\n\nconst ArtistPage = ({\n  data: {\n    markdownRemark: { frontmatter, html },\n  },\n  pageContext,\n}) => (\n  <>\n    <SEO title={frontmatter.name} lang={pageContext.language} />\n\n    <Composition>\n      <Sidebar>\n        {frontmatter.image && (\n          <Portrait\n            image={{\n              ...frontmatter.image.portrait.fixed,\n              name: frontmatter.name,\n            }}\n          />\n        )}\n        <Title>{frontmatter.name}</Title>\n        <div style={{ textAlign: 'justify' }}>\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n        </div>\n\n        <Social\n          website={frontmatter.website}\n          facebook={frontmatter.facebook}\n          instagram={frontmatter.instagram}\n        />\n      </Sidebar>\n\n      {frontmatter.artwork && (\n        <Gallery\n          partitions={2}\n          component={Artwork}\n          lang={pageContext.language}\n          items={frontmatter.artwork.map((x) => ({\n            image: x.image.full.fluid,\n            title: x.title,\n            video: x.video,\n          }))}\n        />\n      )}\n    </Composition>\n  </>\n);\n\nArtistPage.propTypes = {\n  intl: PropTypes.shape({\n    formatMessage: PropTypes.func,\n  }),\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.shape({\n        slug: PropTypes.slug,\n        name: PropTypes.string,\n        image: PropTypes.object,\n        artwork: PropTypes.arrayOf(\n          PropTypes.shape({\n            title: PropTypes.string,\n            image: PropTypes.object,\n            video: PropTypes.string,\n          })\n        ),\n        website: PropTypes.string,\n        facebook: PropTypes.string,\n        instagram: PropTypes.string,\n      }),\n      html: PropTypes.string,\n    }),\n  }),\n};\n\nexport default ArtistPage;\n\nexport const pageQuery = graphql`\n  query($slug: String, $language: String) {\n    markdownRemark(\n      frontmatter: { slug: { eq: $slug }, lang: { eq: $language } }\n      fileInfo: { sourceInstanceName: { eq: \"artists\" } }\n    ) {\n      frontmatter {\n        slug\n        name\n        image {\n          portrait: childImageSharp {\n            fixed(quality: 95, width: 199, height: 199, fit: INSIDE) {\n              ...GatsbyImageSharpFixed_withWebp\n            }\n          }\n        }\n        artwork {\n          title\n          image {\n            full: childImageSharp {\n              fluid(quality: 95) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n          video\n        }\n        website\n        facebook\n        instagram\n      }\n      html\n    }\n  }\n`;\n"],"sourceRoot":""}